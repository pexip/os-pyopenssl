From: SVN-Git Migration <python-modules-team@lists.alioth.debian.org>
Date: Thu, 8 Oct 2015 10:47:52 -0700
Subject: disable test_set_default_verify_paths since it tries to access the
 web

---
 tests/test_ssl.py | 30 ++++++++++++++++--------------
 1 file changed, 16 insertions(+), 14 deletions(-)

--- a/tests/test_ssl.py
+++ b/tests/test_ssl.py
@@ -1252,21 +1252,22 @@ class TestContext(object):
         # internet which has such a certificate.  Connecting to the network
         # in a unit test is bad, but it's the only way I can think of to
         # really test this. -exarkun
-        context = Context(SSLv23_METHOD)
-        context.set_default_verify_paths()
-        context.set_verify(
-            VERIFY_PEER,
-            lambda conn, cert, errno, depth, preverify_ok: preverify_ok,
-        )
+        pass
+        #context = Context(SSLv23_METHOD)
+        #context.set_default_verify_paths()
+        #context.set_verify(
+        #    VERIFY_PEER,
+        #    lambda conn, cert, errno, depth, preverify_ok: preverify_ok,
+        #)
 
-        client = socket_any_family()
-        client.connect(("encrypted.google.com", 443))
-        clientSSL = Connection(context, client)
-        clientSSL.set_connect_state()
-        clientSSL.set_tlsext_host_name(b"encrypted.google.com")
-        clientSSL.do_handshake()
-        clientSSL.send(b"GET / HTTP/1.0\r\n\r\n")
-        assert clientSSL.recv(1024)
+        #client = socket_any_family()
+        #client.connect(("encrypted.google.com", 443))
+        #clientSSL = Connection(context, client)
+        #clientSSL.set_connect_state()
+        #clientSSL.set_tlsext_host_name(b"encrypted.google.com")
+        #clientSSL.do_handshake()
+        #clientSSL.send(b"GET / HTTP/1.0\r\n\r\n")
+        #assert clientSSL.recv(1024)
 
     def test_fallback_path_is_not_file_or_dir(self):
         """
