diff --git a/OpenSSL/ssl/context.c b/OpenSSL/ssl/context.c
index ea7847f..707dcea 100644
--- a/OpenSSL/ssl/context.c
+++ b/OpenSSL/ssl/context.c
@@ -1058,6 +1058,99 @@ ssl_Context_set_options(ssl_ContextObj *self, PyObject *args)
     return PyLong_FromLong(SSL_CTX_set_options(self->ctx, options));
 }
 
+static char ssl_Context_set_tmp_dh_from_pem_doc[] = "\n\
+Set DH parameters from PEM-encoded data\n\
+\n\
+@param pem: String containing PEM-encoded DH parameters.\n\
+@return: None\n\
+";
+static PyObject *
+ssl_Context_set_tmp_dh_from_pem(ssl_ContextObj *self, PyObject *args)
+{
+    char *pem;
+    BIO *bio;
+    DH *dh;
+
+    if (!PyArg_ParseTuple(args, "s:set_tmp_dh_from_pem", &pem))
+        return NULL;
+
+    bio = BIO_new_mem_buf(pem, -1);
+    if (bio == NULL) {
+        exception_from_error_queue(ssl_Error);
+        return NULL;
+    }
+
+    dh = PEM_read_bio_DHparams(bio, NULL, NULL, NULL);
+    if (dh == NULL) {
+        exception_from_error_queue(ssl_Error);
+        BIO_free(bio);
+        return NULL;
+    }
+
+    SSL_CTX_set_tmp_dh(self->ctx, dh);
+    DH_free(dh);
+    BIO_free(bio);
+
+    Py_INCREF(Py_None);
+    return Py_None;
+}
+
+static char ssl_Context_set_tmp_ecdh_from_pem_doc[] = "\n\
+Set ECDH parameters from PEM-encoded data\n\
+\n\
+@param pem: String containing PEM-encoded ECDH parameters.\n\
+@return: None\n\
+";
+static PyObject *
+ssl_Context_set_tmp_ecdh_from_pem(ssl_ContextObj *self, PyObject *args)
+{
+    char *pem;
+    BIO *bio;
+    EC_GROUP *group;
+    EC_KEY *key;
+    int nid;
+
+    if (!PyArg_ParseTuple(args, "s:set_tmp_ecdh_from_pem", &pem))
+        return NULL;
+
+    bio = BIO_new_mem_buf(pem, -1);
+    if (bio == NULL) {
+        exception_from_error_queue(ssl_Error);
+        return NULL;
+    }
+
+    group = PEM_read_bio_ECPKParameters(bio, NULL, NULL, NULL);
+    if (group == NULL) {
+        exception_from_error_queue(ssl_Error);
+        BIO_free(bio);
+        return NULL;
+    }
+
+    nid = EC_GROUP_get_curve_name(group);
+    if (nid == 0) {
+        exception_from_error_queue(ssl_Error);
+        EC_GROUP_free(group);
+        BIO_free(bio);
+        return NULL;
+    }
+
+    key = EC_KEY_new_by_curve_name(nid);
+    if (key == NULL) {
+        exception_from_error_queue(ssl_Error);
+        EC_GROUP_free(group);
+        BIO_free(bio);
+        return NULL;
+    }
+
+    SSL_CTX_set_tmp_ecdh(self->ctx, key);
+
+    EC_KEY_free(key);
+    EC_GROUP_free(group);
+    BIO_free(bio);
+
+    Py_INCREF(Py_None);
+    return Py_None;
+}
 
 /*
  * Member methods in the Context object
@@ -1096,6 +1189,8 @@ static PyMethodDef ssl_Context_methods[] = {
     ADD_METHOD(set_app_data),
     ADD_METHOD(get_cert_store),
     ADD_METHOD(set_options),
+    ADD_METHOD(set_tmp_dh_from_pem),
+    ADD_METHOD(set_tmp_ecdh_from_pem),
     { NULL, NULL }
 };
 #undef ADD_METHOD
